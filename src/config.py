"""Configuration for company RAG software"""

import os
from enum import Enum

from dotenv import load_dotenv

load_dotenv()


class FileExtensions(Enum):
    CSV = ".csv"
    PDF = ".pdf"
    TXT = ".txt"


class LLMType(Enum):
    OPENAI = "openai"


class EmbeddingsType(Enum):
    OPENAI = "openai"


# Constants for RAG system configuration
DATA_DIRECTORY: str = (
    "./data"  # Contatins all company documents which will be processed
)
COMPANY_KNOWLEDGE_COLLECTION: str = "company_knowledge"
PERSISTENT_DB_PATH: str = "./chroma_db"  # Persistent database path
FILE_METADATA_PATH: str = (
    "./file_metadata.json"  # File tracking metadata to update embeddings after a file is changed
)
MAX_TOKENS: int = 800  # Determines the lenghth of the response generated by the LLM
TEMPERATURE: float = (
    0  # Determines the creativity of the response generated by the LLM, 0 means deterministic, not creative at all
)
TOP_K_RESULTS: int = 2  # Top most relevant references from documents to be returned
MAX_RELEVANCE_DISTANCE: float = 0.55

# PDF processing
PDF_CHUNK_SIZE: int = 1000
PDF_OVERLAP: int = 200

# Model configuration constants
OPENAI_EMBEDDING_MODEL: str = "text-embedding-ada-002"
OPENAI_LLM_MODEL: str = "gpt-4o-mini"
OPENAI_API_KEY_ENV_VAR: str = "OPENAI_API_KEY"

os.environ["TOKENIZERS_PARALLELISM"] = "false"
